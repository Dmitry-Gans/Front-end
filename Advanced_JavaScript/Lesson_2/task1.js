"use strict";

/*
Задание 1:
Давайте создадим класс для управления банковским счетом. В этом классе будет
приватное свойство для хранения текущего баланса, а также методы для внесения
и снятия денег со счета.
Необходимо реализовать класс BankAccount, в нем:
1. Приватное свойство #balance, которое инициализируется значением 0 и
представляет собой текущий баланс счета.
2. Геттер balance, который позволит получить информацию о текущем балансе.
3. Метод deposit(amount), который позволит вносить средства на счет.
Убедитесь, что сумма внесения не отрицательная, что значение является
нормальным числом и дробная часть не превышает двух знаков, в противном случае
выбрасывайте соответствующую ошибку.
4. Метод withdraw(amount), который позволит снимать средства со счета.
Убедитесь, что сумма внесения не отрицательная, что значение является
нормальным числом и дробная часть не превышает двух знаков, и сумма снятия
не может превышать текущий баланс аккаунта в противном случае выбрасывайте
соответствующую ошибку.
*/

class BankAccount {
  #balance = 0;

  // Метод проверяет, на валидность вносимой суммы:
  #amountIsCorrect(amount) {
    // Метод Number.isFinite() проверяет, является ли переданное значение конечным числом. Он возвращает true, если значение является конечным числом, и false в противном случае
    if (!Number.isFinite(amount)) {
      throw new Error("Вы передали не корректное число");
    }
    if (amount <= 0) {
      throw new Error("Сумма не может быть отрицательной или равна 0");
    }
    // if (amount % 0.01 !== 0) {
    //     throw new Error('Дробная часть суммы не может превышать 2 знака');
    // }

    // Метод split() разбивает строку на массив символов по разделителю "точка", получается два символа
    const arr = amount.toString().split(".");
    // Существует ли второй элемент и если длина второго элемента больше 2, то выбрасываем ошибку
    if (arr[1]?.length > 2) {
      throw new Error("Дробная часть суммы не может превышать 2 знака");
    }
  }

  // Метод возвращает информацию о текущем балансе:
  getBalance() {
    return Math.round(this.#balance * 100) / 100;
  }

  // Метод позволяет вносить средства на счет:
  deposit(amount) {
    this.#amountIsCorrect(amount);
    this.#balance += amount;
  }

  // Метод позволяет снимать средства со счета:
  withdraw(amount) {
    this.#amountIsCorrect(amount);
    if (amount > this.#balance) {
      throw new Error("Сумма снятия не может превышать текущий баланс");
    }
    this.#balance -= amount;
  }
}

const account = new BankAccount();

console.log(account.getBalance());

account.deposit(100);

console.log(account.getBalance());

// account.withdraw("25"); // Вы передали не корректное число
account.withdraw(25);

console.log(account.getBalance());
